@page "/withdraw"

@rendermode InteractiveWebAssembly

@inject IJSRuntime js
@inject HttpClient httpClient

<link rel="stylesheet" href="css/menu.css" />

<div style="display: flex; justify-content: center; pointer-events: none;">
    <img style="position: fixed; margin-top: 12%;" src="images/starry-background-4.svg" />
</div>

<div class="text-center" style="padding-top: 12%; padding-bottom: 6%; padding-left: 4%; padding-right: 4%;">
    <h6 class="grayed-out">Ваш баланс</h6>

    <div class="d-flex justify-content-center gap-2">
        <img class="fade-in" src="images/emojis/small_coin.svg" />
        <h1>@UserCoins</h1>
    </div>

    <h3 class="grayed-out">$ @usdCoins USD</h3>

    <div style="margin-top: 20px;">
        <InputNumber TValue="long?" @bind-Value=@coinsToWithdraw class="form-control" style="border-radius: 10px; background: rgba(255, 255, 255, 0.15); color: #FFF; border-width: 0px;" placeholder="Кол-во монет" />
    </div>

    <div style="margin-top: 20px;">
        <InputText @bind-Value=@wallet class="form-control" style="border-radius: 10px; background: rgba(255, 255, 255, 0.15); color: #FFF; border-width: 0px;" placeholder="Номер кошелька (USDT TRC 20)" />
    </div>

    <h6 style="margin-top: 20px;">*Минимальный вывод 10,000,000 монет</h6>

    <a @onclick=WithdrawMoney>
        <img style="margin-top: 50px;" src="images/buttons/withdraw_button.svg" />
    </a>
</div>

<div class="bottom text-center">
    <h6>
        Вывод может занять до 3-х часов.
        <br />
        Проблемы с выводом? Напишите в тех.поддержку
    </h6>

    <a href="https://t.me/limon_coin_ads">@@limon_coin_ads</a>
    
    <a style="text-decoration: underline; color: #FFF;" @onclick="@(async () => await js.InvokeVoidAsync("openLink", "https://ebony-shroud-b2b.notion.site/513fe10cdb564c48a39787c82c027dfc"))">
        <h1>FAQ</h1>
    </a>
</div>

@code {
    [SupplyParameterFromQuery]
    public long UserCoins { get; init; }

    [SupplyParameterFromQuery]
    public int Energy { get; init; }

    [SupplyParameterFromQuery]
    public int MaxEnergy { get; init; }

    private decimal usdCoins => UserCoins / 100_000m;

    long telegramId;

    string wallet = "";

    long? coinsToWithdraw = null;

    async Task WithdrawMoney()
    {
        if (coinsToWithdraw <= 10_000_000 || UserCoins <= coinsToWithdraw)
        {
            await js.InvokeVoidAsync("showToast", "У Вас недостаточно средств!");
            return;
        }

        await httpClient.PostAsync($"api/user/withdraw/{telegramId}?wallet={wallet}&coins={coinsToWithdraw}", null!);
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (!firstRender)
        {
            return;
        }

        await js.InvokeVoidAsync("backButtonToggle", $"?UserCoins={UserCoins}&Energy={Energy}&MaxEnergy={MaxEnergy}");

        telegramId = await js.InvokeAsync<long>("getUserId");
    }
}